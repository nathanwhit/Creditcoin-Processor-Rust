name: CI
on:
  push:
    branches: main
  pull_request:

jobs:
  check:
    name: Check Build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake make gcc protobuf-compiler libzmq3-dev
      - name: Check crate without default features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features
      - name: Check crate with all features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features
  test:
    name: Testing ${{ matrix.feature }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        feature: ["", "--features 'old-sawtooth'"]

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake make gcc protobuf-compiler libzmq3-dev
      - name: Run tests with Sawtooth
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.feature }}
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: .grcov.yml

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.coverage.outputs.report }}
          fail_ci_if_error: true
          verbose: true

  fmt:
    name: Rustfmt
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake make gcc protobuf-compiler libzmq3-dev
      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
